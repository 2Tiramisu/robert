<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<configuration>
    <!--引用springboot默认配置-->
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <!-- 该节点会读取Environment中配置的值，在这里我们读取application.yml中的值 -->
    <springProperty scope="context" name="module" source="spring.application.name"
                    defaultValue="undefinded"/>
    <!-- 该节点会读取Environment中配置的值，在这里我们读取application.yml中的值 -->
    <springProperty scope="context" name="bootstrapServers" source="spring.kafka.bootstrap-servers"
                    defaultValue="172.16.1.111:9092"/>
    <!-- 该节点会读取Environment中配置的值，在这里我们读取application.yml中的值 -->
    <springProperty scope="context" name="logsTopic" source="spring.kafka.logs-topic"
                    defaultValue="bona-logs"/>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 使用net.logstash.logback.encoder.LogstashEncoder默认格式 -->
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder" />
    </appender>
    <!-- This is the kafkaAppender -->
    <appender name="kafkaAppender" class="com.github.danielwegener.logback.kafka.KafkaAppender">
        <encoder>
            <pattern>${module} | %d | %-5level| %logger{15} - %msg</pattern>
            <!--<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>-->
            <!--<pattern>%boldYellow(${module}) | %d | %highlight(%-5level)| %cyan(%logger{15}) - %msg %n</pattern>-->
        </encoder>
        <topic>${logsTopic}</topic>
        <keyingStrategy class="com.github.danielwegener.logback.kafka.keying.NoKeyKeyingStrategy" />
        <deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy" />
        <!-- Optional parameter to use a fixed partition -->
        <!-- <partition>0</partition> -->

        <!-- Optional parameter to include log timestamps into the kafka message -->
        <!-- <appendTimestamp>true</appendTimestamp> -->

        <!-- each <producerConfig> translates to regular kafka-client config (format: key=value) -->
        <!-- producer configs are documented here: https://kafka.apache.org/documentation.html#newproducerconfigs -->
        <!-- bootstrap.servers is the only mandatory producerConfig -->
        <producerConfig>bootstrap.servers=${bootstrapServers}</producerConfig>
        <!-- this is the fallback appender if kafka is not available. -->
        <appender-ref ref="STDOUT"/>
    </appender>

    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="kafkaAppender" />
    </appender>

    <!-- 指定项目中的logger -->
    <!--<logger name="kafkaTest" level="INFO" >-->
        <!--<appender-ref ref="kafkaAppender" />-->
    <!--</logger>-->
    <root level="INFO">
        <!--使用springboot默认配置 调试窗口输出-->
        <!--<appender-ref ref="STDOUT" />-->
        <appender-ref ref="ASYNC" />
    </root>
</configuration>